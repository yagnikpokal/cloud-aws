package main

import (
	"github.com/aws/aws-lambda-go/lambda"
)

type TeamRequest struct {
	FirstName string `json:"firstname"`
	Lastname  string `json:"lastname"`
}

type Response struct {
	Message string `json:"message"`
}

func GetTeamAndMembers(req TeamRequest) (Response, error) {
	return Response{
		Message: "Hello " + req.FirstName + " " + req.Lastname,
	}, nil
}

func main() {
	lambda.Start(GetTeamAndMembers)
}

// package main

// import (
// 	"encoding/json"
// 	"fmt"
// 	"net/http"

// 	"github.com/aws/aws-lambda-go/events"
// 	"github.com/aws/aws-lambda-go/lambda"
// )

// type Person struct {
// 	FirstName *string `json:"firstname"`
// 	LastName  *string `json:"lastname"`
// }
// type ResponseBody struct {
// 	Message *string `json:"message"`
// }

// func main() {
// 	lambda.Start(handler)
// }

// func handler(request events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {
// 	var person Person
// 	err := json.Unmarshal([]byte(request.Body), &person)
// 	if err != nil {
// 		return events.APIGatewayProxyResponse{}, err
// 	}

// 	msg := fmt.Sprintf("Hello %v %v", *person.FirstName, *person.LastName)
// 	responseBody := ResponseBody{
// 		Message: &msg,
// 	}
// 	jByte, err := json.Marshal(responseBody)
// 	if err != nil {
// 		return events.APIGatewayProxyResponse{}, err
// 	}

// 	return events.APIGatewayProxyResponse{
// 		StatusCode: http.StatusOK,
// 		Body:       string(jByte),
// 	}, nil
// }
